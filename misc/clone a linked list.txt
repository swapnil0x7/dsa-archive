/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL) return head;
        Node* curr= head;
        unordered_map<Node*,Node*> mp;
        Node* clone = NULL;
        Node* clone_head = NULL;
        while(curr!=NULL){
            Node* temp = new Node(curr->val);
            mp[curr]=temp;
            curr=curr->next;
        }
        curr=head;
        while(curr!=NULL){
            clone = mp[curr];
            clone->next = mp[curr->next];
            clone->random = mp[curr->random];
            curr=curr->next;
        }
        clone_head = mp[head];
        return clone_head;
    }
};