#include<bits/stdc++.h>
using namespace std;
#define size 100
int c=0;
int a[8]= {-1,-1,-1,0,0,1,1,1};
int b[8]= {-1,0,1,-1,1,-1,0,1};


bool is_safe(int arr[size][size], int i,int j, int n,int m, bool visited[size][size]){
    if(i<0 || j<0 || i>=n || j>=m) return 0;
    return arr[i][j] == 1 and !visited[i][j];
}

void find_max(int arr[size][size], int i,int j,int n,int m,bool visited[size][size]){
    visited[i][j] = true;
    for(int x=0;x<8;x++){
        if(is_safe(arr,i+a[x],j+b[x],n,m,visited)){
            c++;
            find_max(arr,i+a[x],j+b[x],n,m,visited);
        }
    }
}
int main(){
    int t; cin>>t;
    while(t--){
        int arr[size][size];
        int n,m;
        cin>>n>>m;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cin>>arr[i][j];
            }
        }
        bool visited[size][size];
        memset(visited,0,sizeof(visited));
        int answer =INT_MIN;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!visited[i][j] && arr[i][j]==1){
                    c=1;
                    find_max(arr,i,j,n,m,visited);
                    answer = max(answer, c);
                }
            }
        }
        cout<<answer<<endl;
        
    }
}