#include<bits/stdc++.h>
using namespace std;

bool dfs(int i, vector<int> adj[],bool visited[], bool curr_st[]){
    visited[i]=true;
    curr_st[i]=true;
    
    for(auto j: adj[i]){
        if(!visited[j] && dfs(j,adj,visited,curr_st)){
            return true;
        }
        else if(curr_st[j]==true){
            return true;
        }
    }
    curr_st[i]=false;
    return false;
}

int main(){
    int n,e;
    cin>>n>>e;
    
    vector<int> adj[n];
    int a,b;
    
    
    for(int i=0;i<e;i++){
        cin>>a>>b;
        adj[a].push_back(b);
    }
    
    bool visited[n];
    memset(visited,0,n);
    
    bool curr_st[n];
    memset(curr_st,0,n);
    
    bool flag=false;
    for(int i=0;i<n;i++){
        if(!visited[i] && dfs(i,adj,visited,curr_st)){
            flag=true;
        }
        
    }
    if(flag==true) cout<<"TRUE"<<endl;
    else cout<<"FALSE"<<endl;
   
}